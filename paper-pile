#!/usr/bin/env python

# -*- mode: python -*-

import os, sys, argparse, ConfigParser

import add, bibtex, serve, edit_metadata, open_paper, edit_notes, rename
import list_papers

def main():
    rcfile = os.path.expanduser("~/.paperpilerc")

    if not os.path.exists(rcfile):
        sys.exit("Can't find config file ~/.paperpilerc")

    config = ConfigParser.ConfigParser()
    parsed_files = config.read([rcfile])

    if len(parsed_files) != 1:
        sys.exit("Error parsing config file ~/.paperpilerc")

    parser = argparse.ArgumentParser(description="dead simple research paper organization")
    subparsers = parser.add_subparsers(title="valid commands", dest="command")

    commands = {
        "add" : add,
        "bibtex" : bibtex,
        "serve" : serve,
        "edit_metadata" : edit_metadata,
        "edit_notes" : edit_notes,
        "open" : open_paper,
        "rename" : rename,
        "list" : list_papers
        }

    try:
        for cmd_name, cmd_module in commands.items():
            subparser = cmd_module.parser(cmd_name, subparsers, config)

        args = parser.parse_args()
        args.config = config
        chosen_command = args.command
        del args.command

        return commands[chosen_command].command(**vars(args))
    except ConfigParser.Error, e:
        sys.exit("Missing config parameter(s): %s" % (e))

if __name__ == "__main__":
    sys.exit(main())
